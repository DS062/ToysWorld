// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToysWorld.Data;

namespace ToysWorld.Migrations
{
    [DbContext(typeof(ToysWorldContext))]
    [Migration("20210811164453_KidsWorld")]
    partial class KidsWorld
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToysWorld.Models.Offers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Doffers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("toysid")
                        .HasColumnType("int");

                    b.Property<DateTime>("vlid")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("toysid");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("ToysWorld.Models.Sales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ToysWorld.Models.Target", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ETarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("salesid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("salesid");

                    b.ToTable("Target");
                });

            modelBuilder.Entity("ToysWorld.Models.Toys", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Toys");
                });

            modelBuilder.Entity("ToysWorld.Models.Offers", b =>
                {
                    b.HasOne("ToysWorld.Models.Toys", "toys")
                        .WithMany()
                        .HasForeignKey("toysid");

                    b.Navigation("toys");
                });

            modelBuilder.Entity("ToysWorld.Models.Target", b =>
                {
                    b.HasOne("ToysWorld.Models.Sales", "sales")
                        .WithMany()
                        .HasForeignKey("salesid");

                    b.Navigation("sales");
                });
#pragma warning restore 612, 618
        }
    }
}
